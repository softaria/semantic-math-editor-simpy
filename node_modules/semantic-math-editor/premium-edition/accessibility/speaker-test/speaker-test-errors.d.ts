/**
 * @hidden
 * @packageDocumentation
 */
import { MathAbs, MathAnd, MathAreaIntegral, MathBrackets, MathComma, MathConstant, MathDefiniteIntegral, MathDerivative, MathDeterminant, MathDifferential, MathDivision, MathEmptySet, MathEquality, MathExpressionSet, MathFunction, MathFunctionDifference, MathImplicitMultiply, MathIncludeSet, MathIndefiniteIntegral, MathInfimum, MathIntersection, MathInterval, MathLeibnizDerivative, MathLimit, MathLogarithm, MathMax, MathMin, MathMinus, MathMultiply, MathNaturalLogarithm, MathNodeVisitor, MathNumber, MathNumericSet, MathOr, MathParentheses, MathPiecewiseFunction, MathPlaceholder, MathPlus, MathPoint, MathPower, MathPredicate, MathProduct, MathRawText, MathReversedFunction, MathRoot, MathSet, MathSquareRoot, MathSubIndex, MathSum, MathSupremum, MathSymbol, MathSystemOfEquations, MathTransformation, MathTrigonometricFunction, MathUnaryMinus, MathUndefined, MathUnion, MathVariable, MathVerticalBar } from "../../api/model";
import { SpeakerTestCase } from "./speaker-test-imports";
/**
 * Creates correct instance for each math node type
 */
export declare class ErrorMathNodeSpeakerInstanceCreator implements MathNodeVisitor<SpeakerTestCase[]> {
    visitAbs(mathNode: MathAbs): SpeakerTestCase[];
    visitAnd(mathNode: MathAnd): SpeakerTestCase[];
    visitAreaIntegral(mathNode: MathAreaIntegral): SpeakerTestCase[];
    visitBrackets(mathNode: MathBrackets): SpeakerTestCase[];
    visitComma(mathNode: MathComma): SpeakerTestCase[];
    visitConstant(mathNode: MathConstant): SpeakerTestCase[];
    visitDefiniteIntegral(mathNode: MathDefiniteIntegral): SpeakerTestCase[];
    visitDerivative(mathNode: MathDerivative): SpeakerTestCase[];
    visitDeterminant(mathNode: MathDeterminant): SpeakerTestCase[];
    visitDifferential(mathNode: MathDifferential): SpeakerTestCase[];
    visitDivision(mathNode: MathDivision): SpeakerTestCase[];
    visitEmptySet(mathNode: MathEmptySet): SpeakerTestCase[];
    visitEquality(mathNode: MathEquality): SpeakerTestCase[];
    visitExpressionSet(mathNode: MathExpressionSet): SpeakerTestCase[];
    visitFunction(mathNode: MathFunction): SpeakerTestCase[];
    visitFunctionDifference(mathNode: MathFunctionDifference): SpeakerTestCase[];
    visitImplicitMultiply(mathNode: MathImplicitMultiply): SpeakerTestCase[];
    visitIncludeSet(mathNode: MathIncludeSet): SpeakerTestCase[];
    visitIndefiniteIntegral(mathNode: MathIndefiniteIntegral): SpeakerTestCase[];
    visitInfimum(mathNode: MathInfimum): SpeakerTestCase[];
    visitIntersection(mathNode: MathIntersection): SpeakerTestCase[];
    visitInterval(mathNode: MathInterval): SpeakerTestCase[];
    visitPoint(mathNode: MathPoint): SpeakerTestCase[];
    visitLeibnizDerivative(mathNode: MathLeibnizDerivative): SpeakerTestCase[];
    visitLimit(mathNode: MathLimit): SpeakerTestCase[];
    visitLogarithm(mathNode: MathLogarithm): SpeakerTestCase[];
    visitMax(mathNode: MathMax): SpeakerTestCase[];
    visitMin(mathNode: MathMin): SpeakerTestCase[];
    visitMinus(mathNode: MathMinus): SpeakerTestCase[];
    visitMultiply(mathNode: MathMultiply): SpeakerTestCase[];
    visitNaturalLogarithm(mathNode: MathNaturalLogarithm): SpeakerTestCase[];
    visitNumber(mathNode: MathNumber): SpeakerTestCase[];
    visitNumericSet(mathNode: MathNumericSet): SpeakerTestCase[];
    visitOr(mathNode: MathOr): SpeakerTestCase[];
    visitParentheses(mathNode: MathParentheses): SpeakerTestCase[];
    visitPiecewiseFunction(mathNode: MathPiecewiseFunction): SpeakerTestCase[];
    visitPlaceholder(mathNode: MathPlaceholder): SpeakerTestCase[];
    visitPlus(mathNode: MathPlus): SpeakerTestCase[];
    visitPower(mathNode: MathPower): SpeakerTestCase[];
    visitPredicate(mathNode: MathPredicate): SpeakerTestCase[];
    visitProduct(mathNode: MathProduct): SpeakerTestCase[];
    visitRawText(mathNode: MathRawText): SpeakerTestCase[];
    visitReversedFunction(mathNode: MathReversedFunction): SpeakerTestCase[];
    visitRoot(mathNode: MathRoot): SpeakerTestCase[];
    visitSet(mathNode: MathSet): SpeakerTestCase[];
    visitSquareRoot(mathNode: MathSquareRoot): SpeakerTestCase[];
    visitSubIndex(mathNode: MathSubIndex): SpeakerTestCase[];
    visitSum(mathNode: MathSum): SpeakerTestCase[];
    visitSupremum(mathNode: MathSupremum): SpeakerTestCase[];
    visitSymbol(mathNode: MathSymbol): SpeakerTestCase[];
    visitSystemOfEquations(mathNode: MathSystemOfEquations): SpeakerTestCase[];
    visitTransformation(mathNode: MathTransformation): SpeakerTestCase[];
    visitTrigonometricFunction(mathNode: MathTrigonometricFunction): SpeakerTestCase[];
    visitUnaryMinus(mathNode: MathUnaryMinus): SpeakerTestCase[];
    visitUndefined(mathNode: MathUndefined): SpeakerTestCase[];
    visitUnion(mathNode: MathUnion): SpeakerTestCase[];
    visitVariable(mathNode: MathVariable): SpeakerTestCase[];
    visitVerticalBar(mathNode: MathVerticalBar): SpeakerTestCase[];
}
