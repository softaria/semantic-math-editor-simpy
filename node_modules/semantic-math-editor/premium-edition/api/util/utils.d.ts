/**
 * @hidden
 * @packageDocumentation
 */
import { MathNode, MathStructure } from "../model";
export interface AcceptableVisitor<T> {
    accept(mathNode: MathNode): T;
}
export declare function toCanonicalTree(mathTree: MathStructure): MathStructure;
export declare function handleMathNodeChildren(structure: MathStructure, callback: (parent: MathStructure, child: MathStructure) => MathStructure | null): void;
export declare function tryRotateMathStructure(parent: MathStructure, child: MathStructure): MathStructure | null;
export declare function rotateMathStructure(parent: MathStructure, contender: MathStructure, owner: MathStructure, target: MathStructure): void;
export declare class MathTreeSettings {
    omitSelection?: boolean;
    omitCursor?: boolean;
    omitCell?: boolean;
    omitErrors?: boolean;
    omitSymbols?: boolean;
    omitSymbolIds?: boolean;
}
export declare const omitAllSettings: MathTreeSettings;
export declare function postProcessTree(mathTree: MathStructure, settings?: MathTreeSettings): MathStructure;
