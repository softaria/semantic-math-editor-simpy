/**
 * @hidden
 * @packageDocumentation
 */
import { MathNode, MathStructure } from "../model";
export declare function omitParentheses(source: MathStructure): MathStructure;
export declare function emitParentheses(source: MathStructure): MathStructure;
declare class ParensManager {
    private readonly isOpenInSourceLang;
    private readonly isOpenInTargetLang;
    private readonly isRightAssocInSource;
    private readonly isRightAssocInTarget;
    private readonly getSourcePrio;
    private readonly getTargetPrio;
    constructor(isOpenInSourceLang: (node: MathNode, left: boolean) => boolean, isOpenInTargetLang: (node: MathNode, left: boolean) => boolean, getSourcePrio: (node: MathNode) => number, getTargetPrio: (node: MathNode) => number, isRightAssocInSource: (node: MathNode) => boolean, isRightAssocInTarget: (node: MathNode) => boolean);
    processParens(node: MathStructure): void;
    private addOrRemovePrensIfRequired;
    private isPar;
}
export declare class ToGrlParManager extends ParensManager {
    constructor();
}
export declare class FromGrlParManager extends ParensManager {
    constructor();
}
export {};
