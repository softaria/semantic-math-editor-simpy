/**
 * @hidden
 * @packageDocumentation
 */
/**
 * While generating insertion advices, this class also looks at left of the pointer and tries
 * to find those replacements whose part has been already typed by the user.
 */
import { AdviceGenerator } from "../../../standard-edition/accessibility/advice-generator";
import { IAdvice } from "../../../standard-edition/accessibility/advices";
import { Replacement } from "../../../standard-edition/engine/hints";
import { SelectionEditor } from "../../../standard-edition/editor/selection-editor";
export declare class SemanticAdviceGenerator extends AdviceGenerator {
    generateAdvices(): IAdvice[];
    protected addAllPointContextAdvices(adv: IAdvice[], editor: SelectionEditor): void;
    protected addAllVariableContextAdvices(adv: IAdvice[], editor: SelectionEditor): void;
    protected addInsertVariableAdvices(adv: IAdvice[]): void;
    protected addSelectionWrapAdvices(adv: IAdvice[], replacements: Replacement[], optionalTypedSymbol?: string): void;
    private addPointContextAdvices;
    private addVariableContextAdvices;
}
