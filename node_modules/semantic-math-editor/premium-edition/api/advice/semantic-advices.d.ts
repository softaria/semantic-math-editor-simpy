/**
 * @hidden
 * @packageDocumentation
 */
import { Term } from "../../semantic/semantic-view";
import { InsertionAdvice } from "../../../standard-edition/accessibility/advices";
import { Replacement } from "../../../standard-edition/engine/hints";
import { SemanticContext } from "../../../standard-edition/engine/semantic-context";
import { UndoRedoEditor } from "../../../standard-edition/editor/undo-redo-editor";
import { RootNode } from "../../../standard-edition/model/model-base";
export declare class SemanticInsertionAdvice extends InsertionAdvice {
    onDecision: (terms: Term[]) => void;
    terms: Term[];
    constructor(label: string, plainText: string, expression: RootNode, repl: Replacement, editor: UndoRedoEditor, placePointer: boolean, explicitPriority: number, terms: Term[]);
}
export declare function generateSemanticInsertionAdvices(editor: UndoRedoEditor): SemanticInsertionAdvice[];
export declare function createSemanticInsertionAdvice(editor: UndoRedoEditor, replacement: Replacement, terms: Term[], callback: (terms: Term[]) => ((semanticContext: SemanticContext) => void)): SemanticInsertionAdvice;
