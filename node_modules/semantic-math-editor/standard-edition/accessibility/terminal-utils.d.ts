/**
 * @hidden
 * @packageDocumentation
 */
import { VisualGraph, VisualSpace, VisualSymbol } from "../structure/visual-levels";
import { Terminal } from "../model/model-base";
import { TerminalSequence } from "../engine/hints";
import { SelectionEditor } from "../editor/selection-editor";
import { Selection } from '../engine/selection/selection';
import { InnerSelection } from "../engine/selection/utils";
import { SpaceContainerModifierAdvice } from "./advices";
export declare class TerminalUtils {
    static storedSelected: InnerSelection;
    static currentSelected: InnerSelection;
    static formNodes2Replace(trial: any, tail: TerminalSequence): Terminal[];
    static getTailTerminalSequence(editor: SelectionEditor): TerminalSequence;
    static getVisualSymbolsString(symbols: VisualSymbol[], concatOverThis?: string): string;
    static updateSelectionDifference(sel: Selection): void;
    static getVisualSpaceIndex(vs: VisualSymbol, space: VisualSpace): {
        rowIndex: number;
        columnIndex: number;
    };
    static getSelectionDifferenceString(ed: SelectionEditor, withUpdate?: boolean): string;
    static getCurrentSelectionString(): string;
    private static getSelectionString;
    static getCursorTerminalString(editor: SelectionEditor, leftOne: boolean, skipInvisibleNodes?: boolean): string;
    static getCursorTerminal(editor: SelectionEditor, leftOne: boolean, skipNothingNodes?: boolean): Terminal;
    static getTerminalBasic(initialTerminal: Terminal, goToLeft: boolean, skipInvisiblePrivateTerminals: boolean, skipNothingNodes: boolean, func: (terminal: Terminal, isLeft: boolean) => VisualSymbol): Terminal;
    static getNeighbourOrParentTerminal(vg: VisualGraph, initialTerminal: Terminal, goToLeft: boolean, skipInvisiblePrivateTerminals: boolean, skipNothingNodes: boolean): Terminal;
    static getNeighbourTerminal(vg: VisualGraph, initialTerminal: Terminal, goToLeft: boolean, skipInvisiblePrivateTerminals: boolean, skipNothingNodes: boolean): Terminal;
    static formVisualSpaceElementIndex(rowIndex: number, columnIndex: number): string;
    static formVisualSpaceRowIndex(rowIndex: number): string;
    static formSpaceAdviceReading(adv: SpaceContainerModifierAdvice): "Add row above" | "Add row below" | "Remove row" | "Add column to the left" | "Add column to the right" | "Remove column";
}
