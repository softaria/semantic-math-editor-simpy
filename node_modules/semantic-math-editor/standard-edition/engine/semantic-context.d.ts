/**
 * @hidden
 * @packageDocumentation
 */
import { VariableNode } from "../model/model-math";
import { RootNode } from "../model/model-base";
export declare class SemanticContext {
    private semanticSettings;
    private readonly defaultFunctionVariables;
    private functionVariables;
    constructor(defaultFunctionVariables?: any, functionVariables?: any, semanticSettings?: any);
    restoreFrom(context: SemanticContext): void;
    mergeFrom(context: SemanticContext, override?: boolean): void;
    setVariableFunction(node: VariableNode, isFunction: boolean): void;
    isVariableSet(node: VariableNode): boolean;
    isVariableFunction(node: VariableNode): boolean;
    getNonFunctionVariables(): Array<string>;
    setPoint(isPoint: boolean): void;
    isPoint(): boolean;
    serialize(): string;
    static deserialize(serialized: string): SemanticContext;
}
export declare function buildContext(root: RootNode, semanticContext?: {
    isPoint?: boolean;
}): SemanticContext;
