/**
 * @hidden
 * @packageDocumentation
 */
import { HorizontalDirection, VerticalDirection } from "../utils";
import { AnyNode, Terminal, TerminalPointer } from "../../model/model-base";
import { VisualGraph, VisualSymbol } from "../../structure/visual-levels";
import { TerminalSerializer } from "../../editor/terminal-serializer";
import { InnerSelection, SelectionHistory, SelectionVisitor } from "./utils";
import { InsertOperation } from "../../model/insert-operation";
export declare class Selection implements SelectionHistory {
    selectionHistory: (InnerSelection)[];
    selection: InnerSelection;
    pop(): InnerSelection;
    push(selection: InnerSelection): void;
    clear(): void;
    copy(): AnyNode;
    replace(replacement: InsertOperation | null): TerminalPointer;
    get horizontalDirection(): HorizontalDirection;
    get verticalDirection(): VerticalDirection;
    get isLevel(): boolean;
    get isEmpty(): boolean;
    get terminals(): Terminal[];
    get size(): number;
    get startPointer(): TerminalPointer;
    getBoundaryTerminal(horizontalDirection: HorizontalDirection, verticalDirection?: VerticalDirection): Terminal;
    getBoundaryPointer(horizontalDirection: HorizontalDirection, verticalDirection?: VerticalDirection): TerminalPointer;
    getBoundarySymbol(horizontalDirection: HorizontalDirection, verticalDirection?: VerticalDirection): VisualSymbol;
    getReplacementPointer(): TerminalPointer;
    extendHorizontally(direction: HorizontalDirection): boolean;
    shrinkHorizontally(direction: HorizontalDirection): boolean;
    extendVertically(direction: VerticalDirection): boolean;
    shrinkVertically(direction: VerticalDirection): boolean;
    static createWithPointerHorizontally(visualGraph: VisualGraph, startPointer: TerminalPointer, direction: HorizontalDirection): Selection;
    static createWithPointerVertically(visualGraph: VisualGraph, startPointer: TerminalPointer, direction: VerticalDirection): Selection;
    static createWithTwoSymbols(visualGraph: VisualGraph, startPointer: TerminalPointer, stop: VisualSymbol, horizontalDirection: HorizontalDirection, verticalDirection: VerticalDirection): Selection;
    accept<T>(visitor: SelectionVisitor<T>): T;
    serialize(terminalSerializer: TerminalSerializer): string;
    static deserialize(visualGraph: VisualGraph, terminalSerializer: TerminalSerializer, serialized: string): Selection;
}
