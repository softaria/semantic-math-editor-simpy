/**
 * @hidden
 * @packageDocumentation
 */
import { AbstractCellNode, NonTerminalVisitor, RootNode } from "../../model/model-base";
import { AbstractBracketsNode, BinaryOperationNode, DeterminantNode, DivideNode, FuncNode, IntegralNode, LimNode, LogNode, MathRootNode, PiecewiseFunctionNode, PredicateNode, PrimeNode, ProdOrSumNode, SubIndexNode, SupIndexNode, SupSubIndexNode, SystemOfEquationsNode, UnaryMinusNode } from "../../model/model-math";
export declare class GrayDecorationVisitor implements NonTerminalVisitor<boolean> {
    visitRoot(node: RootNode): boolean;
    visitCell(node: AbstractCellNode): boolean;
    visitBinaryOperation(node: BinaryOperationNode): boolean;
    visitUnaryMinus(node: UnaryMinusNode): boolean;
    visitFunction(node: FuncNode): boolean;
    visitLim(node: LimNode): boolean;
    visitAbstractBrackets(node: AbstractBracketsNode): boolean;
    visitMathRoot(node: MathRootNode): boolean;
    visitSup(node: SupIndexNode): boolean;
    visitSub(node: SubIndexNode): boolean;
    visitSupSub(node: SupSubIndexNode): boolean;
    visitPrime(node: PrimeNode): boolean;
    visitDivide(node: DivideNode): boolean;
    visitInt(node: IntegralNode): boolean;
    visitLog(node: LogNode): boolean;
    visitProdOrSum(node: ProdOrSumNode): boolean;
    visitPredicate(node: PredicateNode): boolean;
    visitDeterminant(node: DeterminantNode): boolean;
    visitSystemOfEquations(node: SystemOfEquationsNode): boolean;
    visitPiecewiseFunction(node: PiecewiseFunctionNode): boolean;
}
