/**
 * @hidden
 * @packageDocumentation
 */
import { AbstractNode, ParseValue } from "./AST";
import { KatexNodeVisitor } from "./visitors";
export declare class MathClass extends AbstractNode {
    command: string;
    body: AbstractNode[];
    static commands: {
        mathord: string;
        mathbin: string;
        mathrel: string;
        mathopen: string;
        mathclose: string;
        mathpunct: string;
        mathinner: string;
    };
    static stackedCommands: {
        stackrel: string;
        overset: string;
        underset: string;
    };
    constructor(command: string, body: AbstractNode[]);
    toParseValue(): ParseValue;
    accept<T>(visitor: KatexNodeVisitor<T>): T;
    static Stacked(command: string, base: AbstractNode[], stacked: AbstractNode[]): MathClass;
}
