/**
 * @hidden
 * @packageDocumentation
 */
import { AbstractNode, ParseValue } from "./AST";
import { KatexNodeVisitor } from "./visitors";
export declare class Accent extends AbstractNode {
    command: string;
    body: AbstractNode[];
    static commands: {
        acute: string;
        grave: string;
        ddot: string;
        tilde: string;
        bar: string;
        breve: string;
        check: string;
        hat: string;
        vec: string;
        dot: string;
        mathring: string;
        widehat: string;
        widetilde: string;
        widecheck: string;
        overrightarrow: string;
        overleftarrow: string;
        Overrightarrow: string;
        overleftrightarrow: string;
        overgroup: string;
        overlinesegment: string;
        overleftharpoon: string;
        overrightharpoon: string;
    };
    constructor(command: string, body: AbstractNode[]);
    toParseValue(): ParseValue;
    accept<T>(visitor: KatexNodeVisitor<T>): T;
}
/**
 * Allowed only inside text!
 */
export declare class TextAccent extends Accent {
    static textCommands: {
        quote: string;
        graveSym: string;
        cap: string;
        tilda: string;
        eq: string;
        u: string;
        dotSym: string;
        doublequote: string;
        r: string;
        H: string;
        v: string;
        textcircled: string;
    };
    constructor(command: string, body: AbstractNode[]);
    toParseValue(): ParseValue;
}
