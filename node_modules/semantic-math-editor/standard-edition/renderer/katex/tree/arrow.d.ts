/**
 * @hidden
 * @packageDocumentation
 */
import { AbstractNode, ParseValue } from "./AST";
import { KatexNodeVisitor } from "./visitors";
export declare class ExtensibleArrow extends AbstractNode {
    command: string;
    body: AbstractNode[];
    below?: AbstractNode[];
    static commands: {
        xleftarrow: string;
        xrightarrow: string;
        xLeftarrow: string;
        xRightarrow: string;
        xleftrightarrow: string;
        xLeftrightarrow: string;
        xhookleftarrow: string;
        xhookrightarrow: string;
        xmapsto: string;
        xrightharpoondown: string;
        xrightharpoonup: string;
        xleftharpoondown: string;
        xleftharpoonup: string;
        xrightleftharpoons: string;
        xleftrightharpoons: string;
        xlongequal: string;
        xtwoheadrightarrow: string;
        xtwoheadleftarrow: string;
        xtofrom: string;
        xrightleftarrows: string;
        xrightequilibrium: string;
        xleftequilibrium: string;
    };
    constructor(command: string, body: AbstractNode[], below?: AbstractNode[]);
    toParseValue(): ParseValue;
    accept<T>(visitor: KatexNodeVisitor<T>): T;
}
