/**
 * @hidden
 * @packageDocumentation
 */
import { AbstractNode, ParseValue } from "./AST";
import { KatexNodeVisitor } from "./visitors";
export declare class Box extends AbstractNode {
    command: string;
    body: AbstractNode[];
    static commands: {
        cancel: string;
        bcancel: string;
        xcancel: string;
        sout: string;
        fbox: string;
    };
    constructor(command: string, body: AbstractNode[]);
    toParseValue(): ParseValue;
    accept<T>(visitor: KatexNodeVisitor<T>): T;
}
/**
 * Solution to \\fbox not accepting math: \\boxed, which is an alias for \fbox{\displaystyle{...}}
 */
export declare class Boxed extends Box {
    constructor(body: AbstractNode[]);
}
/**
 * Not allowed to include math! Only Textords and Ordgroups.
 */
export declare class ColorBox extends Box {
    backgroundColor: string;
    constructor(body: AbstractNode[], backgroundColor: string);
    toParseValue(): ParseValue;
}
/**
 * Not allowed to include math! Only Textords and Ordgroups.
 */
export declare class FColorBox extends Box {
    borderColor: string;
    backgroundColor: string;
    constructor(body: AbstractNode[], borderColor: string, backgroundColor: string);
    toParseValue(): ParseValue;
}
