/**
 * @hidden
 * @packageDocumentation
 */
import { ArrayEnvironment, CasesEnvironment, MatrixEnvironment } from "./environment";
import { Operation } from "./op";
import { Text } from "./text";
import { AbstractSymbol } from "./symbols";
import { Fraction } from "./genfrac";
import { AbstractNode, KatexTree } from "./AST";
import { Placeholder } from "./placeholder";
import { Phantom } from "./phantom";
import { Accent } from "./accent";
import { AccentUnder } from "./accentunder";
import { ExtensibleArrow } from "./arrow";
import { Color } from "./color";
import { Delimsizing, LeftRight, Middle } from "./delimsizing";
import { Box } from "./enclose";
import { Font } from "./font";
import { MathClass } from "./mclass";
import { Ordgroup } from "./ordgroup";
import { HorizontalBrace } from "./horizBrace";
import { Lap } from "./lap";
import { Kern } from "./kern";
import { OperatorName } from "./operatorname";
import { Overline } from "./overline";
import { Supsub } from "./supsub";
import { Underline } from "./underline";
import { RaiseBox } from "./raisebox";
import { Rule } from "./rule";
import { Sizing } from "./sizing";
import { Smash } from "./smash";
import { Sqrt } from "./sqrt";
import { Styling } from "./styling";
import { Href } from "./href";
export interface KatexNodeVisitor<T> {
    visitRoot(tree: KatexTree): T;
    visitOperation(node: Operation): T;
    visitText(node: Text): T;
    visitColor(node: Color): T;
    visitRule(node: Rule): T;
    visitMathClass(node: MathClass): T;
    visitLap(node: Lap): T;
    visitSmash(node: Smash): T;
    visitFont(node: Font): T;
    visitEnclose(node: Box): T;
    visitRaiseBox(node: RaiseBox): T;
    visitStyling(node: Styling): T;
    visitSizing(node: Sizing): T;
    visitKern(node: Kern): T;
    visitSqrt(node: Sqrt): T;
    visitAccent(node: Accent): T;
    visitHorizontalBrace(node: HorizontalBrace): T;
    visitAccentUnder(node: AccentUnder): T;
    visitExtensibleArrow(node: ExtensibleArrow): T;
    visitSupsub(node: Supsub): T;
    visitLeftRight(node: LeftRight): T;
    visitOrdgroup(node: Ordgroup): T;
    visitOverline(node: Overline): T;
    visitUnderline(node: Underline): T;
    visitAbstractSymbol(node: AbstractSymbol): T;
    visitArrayEnvironment(node: ArrayEnvironment): T;
    visitMatrixEnvironment(node: MatrixEnvironment): T;
    visitCasesEnvironment(node: CasesEnvironment): T;
    visitFraction(node: Fraction): T;
    visitPlaceholder(node: Placeholder): T;
    visitPhantom(node: Phantom): T;
    visitDelimsizing(node: Delimsizing): T;
    visitOperatorName(node: OperatorName): T;
    visitHref(node: Href): T;
    visitMiddle(node: Middle): T;
}
export declare class TraverseVisitor implements KatexNodeVisitor<void> {
    visit: (node: AbstractNode) => void;
    constructor(visit: (node: AbstractNode) => void);
    private visitNodes;
    visitRoot(tree: KatexTree): void;
    visitOperation(node: Operation): void;
    visitText(node: Text): void;
    visitColor(node: Color): void;
    visitRule(node: Rule): void;
    visitMathClass(node: MathClass): void;
    visitLap(node: Lap): void;
    visitSmash(node: Smash): void;
    visitFont(node: Font): void;
    visitEnclose(node: Box): void;
    visitRaiseBox(node: RaiseBox): void;
    visitStyling(node: Styling): void;
    visitSizing(node: Sizing): void;
    visitKern(node: Kern): void;
    visitSqrt(node: Sqrt): void;
    visitAccent(node: Accent): void;
    visitHorizontalBrace(node: HorizontalBrace): void;
    visitAccentUnder(node: AccentUnder): void;
    visitExtensibleArrow(node: ExtensibleArrow): void;
    visitSupsub(node: Supsub): void;
    visitLeftRight(node: LeftRight): void;
    visitOrdgroup(node: Ordgroup): void;
    visitOverline(node: Overline): void;
    visitUnderline(node: Underline): void;
    visitAbstractSymbol(node: AbstractSymbol): void;
    visitArrayEnvironment(node: ArrayEnvironment): void;
    visitMatrixEnvironment(node: MatrixEnvironment): void;
    visitCasesEnvironment(node: CasesEnvironment): void;
    visitFraction(node: Fraction): void;
    visitPlaceholder(node: Placeholder): void;
    visitPhantom(node: Phantom): void;
    visitDelimsizing(node: Delimsizing): void;
    visitOperatorName(node: OperatorName): void;
    visitHref(node: Href): void;
    visitMiddle(node: Middle): void;
}
export declare class ReplaceChildrenVisitor implements KatexNodeVisitor<void> {
    private replaceChild;
    constructor(replaceChild: (parent: AbstractNode, child: AbstractNode) => AbstractNode | void);
    private doReplace;
    visitRoot(tree: KatexTree): void;
    visitOperation(node: Operation): void;
    visitText(node: Text): void;
    visitColor(node: Color): void;
    visitRule(node: Rule): void;
    visitMathClass(node: MathClass): void;
    visitLap(node: Lap): void;
    visitSmash(node: Smash): void;
    visitFont(node: Font): void;
    visitEnclose(node: Box): void;
    visitRaiseBox(node: RaiseBox): void;
    visitStyling(node: Styling): void;
    visitSizing(node: Sizing): void;
    visitKern(node: Kern): void;
    visitSqrt(node: Sqrt): void;
    visitAccent(node: Accent): void;
    visitHorizontalBrace(node: HorizontalBrace): void;
    visitAccentUnder(node: AccentUnder): void;
    visitExtensibleArrow(node: ExtensibleArrow): void;
    visitSupsub(node: Supsub): void;
    visitLeftRight(node: LeftRight): void;
    visitOrdgroup(node: Ordgroup): void;
    visitOverline(node: Overline): void;
    visitUnderline(node: Underline): void;
    visitAbstractSymbol(node: AbstractSymbol): void;
    visitArrayEnvironment(node: ArrayEnvironment): void;
    visitMatrixEnvironment(node: MatrixEnvironment): void;
    visitCasesEnvironment(node: CasesEnvironment): void;
    visitFraction(node: Fraction): void;
    visitPlaceholder(node: Placeholder): void;
    visitPhantom(node: Phantom): void;
    visitDelimsizing(node: Delimsizing): void;
    visitOperatorName(node: OperatorName): void;
    visitHref(node: Href): void;
    visitMiddle(node: Middle): void;
}
